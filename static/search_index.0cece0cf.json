[{"id":0,"title":"","content":"","routePath":"/react-gantt/demo/add.en-US","lang":"","toc":[],"domain":"","frontmatter":{},"version":""},{"id":1,"title":"","content":"","routePath":"/react-gantt/demo/add","lang":"","toc":[],"domain":"","frontmatter":{},"version":""},{"id":2,"title":"","content":"","routePath":"/react-gantt/demo/basic.en-US","lang":"","toc":[],"domain":"","frontmatter":{},"version":""},{"id":3,"title":"","content":"","routePath":"/react-gantt/demo/basic","lang":"","toc":[],"domain":"","frontmatter":{},"version":""},{"id":4,"title":"","content":"","routePath":"/react-gantt/demo/child","lang":"","toc":[],"domain":"","frontmatter":{},"version":""},{"id":5,"title":"","content":"","routePath":"/react-gantt/demo/column","lang":"","toc":[],"domain":"","frontmatter":{},"version":""},{"id":6,"title":"","content":"","routePath":"/react-gantt/demo/custom","lang":"","toc":[],"domain":"","frontmatter":{},"version":""},{"id":7,"title":"","content":"","routePath":"/react-gantt/demo/dependence","lang":"","toc":[],"domain":"","frontmatter":{},"version":""},{"id":8,"title":"","content":"","routePath":"/react-gantt/demo/filterUnit","lang":"","toc":[],"domain":"","frontmatter":{},"version":""},{"id":9,"title":"","content":"","routePath":"/react-gantt/demo/render","lang":"","toc":[],"domain":"","frontmatter":{},"version":""},{"id":10,"title":"Component","content":"Component#\n\n\nBasic Component#\n\nuse data columns onUpdate config, Show a basic Gantt chart\n\n\n\n\nAdd Task Bar#\n\nclick to create taskbar\n\n\n\n\nMulti-level structure#\n\nEnsure that each node contains the children attribute to achieve a multi-level\nstructure\n\nYou can get the current expanded status with onExpand\n\n\n\n\nCustomizing table columns#\n\ncolumns type definition see Type Definition\n\nwhere if each column is configured with the width property. The total width is\ncalculated internally by the component. The default initialized table width is\nthe total width\n\n\n\n\nDependency Structure#\n\n\n\n\nCustom Rendering#\n\n\n\n\nCustomized filtering#\n\nDefault current date filtering support Day, Week, Month, Quarter, Year. Support\nincoming configuration to customize the filtering dimension\n\n\n\n\nAdvanced Usage#\n\nIntroducing the use of the built-in methods on alwaysShowTaskBar, unit and\ninnerRef.\n\n\n\n\nType Definition#\n\n\nColumn Definition#\n\n\n\n\ndata Definition#\n\nThe following fields are built in, and special treatment will be done if the\ndata contains the following attributes\n\n\n\n\nDependence Definition#\n\n\n\n\nBar Definition#\n\nWhen we need to use some custom functions, we will be returned the following\ntype of data, where record is the source data\n\n\n\n\nSight Definition#\n\n\n\n\nAPI#\n\n参数                  说明                                                    类型                                                             默认值\ndata                Data                                                  Gantt.Record<RecordType>[]                                     \ncolumns             Data columns                                          Gantt.Column[]                                                 \ndependencies        Dependencies                                          Gantt.Dependence[]                                             []\nonUpdate            Update callback                                       (record: Gantt.Record<RecordType>, startDate: string,          \n                                                                          endDate: string) => Promise<boolean>\nstartDateKey        Start date key                                        string                                                         startDate\nendDateKey          End date key                                          string                                                         startDate\nisRestDay           Returns whether it is a holiday                       (date: string) => boolean                                      \nunit                Current view                                          Gantt.Sight                                                    \nrowHeight           Line height                                           number                                                         \ncolumnWidth         Default column width                                  number                                                         \ngetBarColor         Returns to default bar style                          (record: Gantt.Record<RecordType>) => {backgroundColor:        \n                                                                          string;borderColor: string}\nshowBackToday       Show Back to Today button                             boolean                                                        \nshowUnitSwitch      Shows the unit switcher                               boolean                                                        \nonRow               Row events                                            {onClick: (record: Gantt.Record<RecordType>) => void}          \ntableIndent         Table indentation                                     number                                                         30\nexpandIcon          Expand child node icon                                ``                                                             \nrenderBar           Custom bar rendering                                  renderBar?: (barInfo: Gantt.Bar<RecordType>, { width, height   \n                                                                          }: { width: number; height: number }) => React.ReactNode\nrenderGroupBar      Custom group bar render                                                                                              \nrenderInvalidBar    Custom invalid bar render                                                                                            \nrenderBarThumb      Custom bar thumb render                                                                                              \nonBarClick          On bar click callback                                 (record: Gantt.Record<RecordType>) => void                     \nalwaysShowTaskBar   Whether to display the left and right side contents   boolean                                                        true\ndisabled            Whether to disable the chart                          boolean                                                        false\nrenderLeftText      Custom rendering of the left content area             (barInfo: Gantt.Bar<RecordType>) => React.ReactNode            \nrenderRightText     Custom rendering of the right content area            (barInfo: Gantt.Bar<RecordType>) => React.ReactNode            \nonExpand            On expand callback                                    (record: Gantt.Record<RecordType>,collapsed:boolean) => void   \n\n\nMethods#\n\nhas innerRef\n\n参数               说明               类型         默认值\nbackToday        backToday        Function   \ngetWidthByDate   getWidthByDate   Function   ","routePath":"/react-gantt/en/component.en-US","lang":"","toc":[{"text":"Component","id":"component","depth":2,"charIndex":-1},{"text":"Basic Component","id":"basic-component","depth":3,"charIndex":12},{"text":"Add Task Bar","id":"add-task-bar","depth":3,"charIndex":93},{"text":"Multi-level structure","id":"multi-level-structure","depth":3,"charIndex":136},{"text":"Customizing table columns","id":"customizing-table-columns","depth":3,"charIndex":308},{"text":"Dependency Structure","id":"dependency-structure","depth":3,"charIndex":559},{"text":"Custom Rendering","id":"custom-rendering","depth":3,"charIndex":585},{"text":"Customized filtering","id":"customized-filtering","depth":3,"charIndex":607},{"text":"Advanced Usage","id":"advanced-usage","depth":3,"charIndex":774},{"text":"Type Definition","id":"type-definition","depth":2,"charIndex":880},{"text":"`Column` Definition","id":"column-definition","depth":3,"charIndex":-1},{"text":"`data` Definition","id":"data-definition","depth":3,"charIndex":-1},{"text":"`Dependence` Definition","id":"dependence-definition","depth":3,"charIndex":-1},{"text":"`Bar` Definition","id":"bar-definition","depth":3,"charIndex":-1},{"text":"`Sight` Definition","id":"sight-definition","depth":3,"charIndex":-1},{"text":"API","id":"api","depth":2,"charIndex":1253},{"text":"Methods","id":"methods","depth":2,"charIndex":5365}],"domain":"","frontmatter":{"title":"Component","nav":{"path":"/component","title":"Component","order":1}},"version":""},{"id":11,"title":"React Gantt Component","content":"Getting Started#\n\n\n📦 Install dependencies#\n\n\n\n\n🔨 Demo#\n\n\n\n\nFeedback#\n\nPlease visit Github","routePath":"/react-gantt/en/index.en-US","lang":"","toc":[{"text":"Getting Started","id":"getting-started","depth":2,"charIndex":-1},{"text":"📦 Install dependencies","id":"-install-dependencies","depth":2,"charIndex":18},{"text":"🔨 Demo","id":"-demo","depth":2,"charIndex":47},{"text":"Feedback","id":"feedback","depth":2,"charIndex":60}],"domain":"","frontmatter":{"title":"React Gantt Component","hero":{"title":"rc-gantt","desc":"Gantt Component","actions":[{"text":"Quick Start →","link":"/component"}]},"footer":"Open-source MIT Licensed | Copyright © 2021<br />"},"version":""},{"id":12,"title":"组件","content":"组件#\n\n\n基础使用#\n\n只需要配置 data columns onUpdate 即可展示一个最简甘特图\n\n\n\n\n新增任务#\n\n点击即可新建 bar\n\n\n\n\n多级结构#\n\n确保每个节点中包含 children 属性，即可实现多级结构\n\n可以通过 onExpand 获取当前展开的状态\n\n\n\n\n自定义表格列#\n\ncolumns 类型定义见类型定义\n\n其中，如果每列都配置 width 属性。组件内部会计算总宽度。默认初始化表格宽度为总宽度\n\n\n\n\n依赖结构#\n\n\n\n\n自定义渲染#\n\n\n\n\n自定义筛选#\n\n默认当前日期筛选支持 日、周、月、季、年。支持传入配置，自定义筛选维度\n\n\n\n\n高级用法#\n\n主要介绍 alwaysShowTaskBar unit 以及 innerRef 上内置方法的使用\n\n\n\n\n类型定义#\n\n\nColumn 定义#\n\n\n\n\ndata 定义#\n\n其中内置了如下几个字段，如果数据中包含如下属性会做特殊处理\n\n\n\n\nDependence 定义#\n\n\n\n\nBar 定义#\n\n在我们需要使用一些自定义函数时，会给我们返回如下类型数据，其中 record 为源数据\n\n\n\n\nSight 定义#\n\n\n\n\nAPI#\n\n参数                  说明           类型                                                             默认值\ndata                数据源          Gantt.Record<RecordType>[]                                     \ncolumns             数据列          Gantt.Column[]                                                 \ndependencies        依赖数组         Gantt.Dependence[]                                             []\nonUpdate            更新回调         (record: Gantt.Record<RecordType>, startDate: string,          \n                                 endDate: string) => Promise<boolean>\nstartDateKey        开始时间属性 key   string                                                         startDate\nendDateKey          结束时间属性 key   string                                                         startDate\nisRestDay           返回是否是节假日     (date: string) => boolean                                      \nunit                当前视图         Gantt.Sight                                                    \nrowHeight           行高           number                                                         \ncolumnWidth         列默认宽度        number                                                         \ngetBarColor         返回默认条样式      (record: Gantt.Record<RecordType>) => {backgroundColor:        \n                                 string;borderColor: string}\nshowBackToday       展示返回今日       boolean                                                        \nshowUnitSwitch      展示视图切换       boolean                                                        \nonRow               行事件          {onClick: (record: Gantt.Record<RecordType>) => void}          \ntableIndent         表格缩进         number                                                         30\nexpandIcon          展开子节点图表      ``                                                             \nrenderBar           自定义渲染 bar    renderBar?: (barInfo: Gantt.Bar<RecordType>, { width, height   \n                                 }: { width: number; height: number }) => React.ReactNode\nrenderGroupBar      自定义渲染组                                                                      \nrenderInvalidBar    自定义渲染拖拽                                                                     \nrenderBarThumb      自定义缩略渲染                                                                     \nonBarClick          行点击事件        (record: Gantt.Record<RecordType>) => void                     \nalwaysShowTaskBar   是否展示左右侧内容    boolean                                                        true\ndisabled            是否禁用图表       boolean                                                        false\nrenderLeftText      自定义渲染左侧内容区   (barInfo: Gantt.Bar<RecordType>) => React.ReactNode            \nrenderRightText     自定义渲染右侧内容区   (barInfo: Gantt.Bar<RecordType>) => React.ReactNode            \nonExpand            点击展开图标时触发    (record: Gantt.Record<RecordType>,collapsed:boolean) => void   \n\n\n方法#\n\n对外抛出 innerRef\n\n参数               说明     类型         默认值\nbackToday        返回今日   Function   \ngetWidthByDate   返回事件   Function   ","routePath":"/react-gantt/zh/component","lang":"","toc":[{"text":"组件","id":"组件","depth":2,"charIndex":-1},{"text":"基础使用","id":"基础使用","depth":3,"charIndex":5},{"text":"新增任务","id":"新增任务","depth":3,"charIndex":56},{"text":"多级结构","id":"多级结构","depth":3,"charIndex":78},{"text":"自定义表格列","id":"自定义表格列","depth":3,"charIndex":145},{"text":"依赖结构","id":"依赖结构","depth":3,"charIndex":222},{"text":"自定义渲染","id":"自定义渲染","depth":3,"charIndex":232},{"text":"自定义筛选","id":"自定义筛选","depth":3,"charIndex":243},{"text":"高级用法","id":"高级用法","depth":3,"charIndex":291},{"text":"类型定义","id":"类型定义","depth":2,"charIndex":351},{"text":"`Column` 定义","id":"column-定义","depth":3,"charIndex":-1},{"text":"`data` 定义","id":"data-定义","depth":3,"charIndex":-1},{"text":"`Dependence` 定义","id":"dependence-定义","depth":3,"charIndex":-1},{"text":"`Bar` 定义","id":"bar-定义","depth":3,"charIndex":-1},{"text":"`Sight` 定义","id":"sight-定义","depth":3,"charIndex":-1},{"text":"API","id":"api","depth":2,"charIndex":508},{"text":"方法","id":"方法","depth":2,"charIndex":3390}],"domain":"","frontmatter":{"title":"组件","nav":{"path":"/component","title":"组件总览","order":1}},"version":""},{"id":13,"title":"rc-gantt","content":"📦 安装依赖#\n\n\n\n\n🔨 快速开始#\n\n\n\n查看更多：基础使用\n\n\n问题反馈#\n\n请访问 Github 或加微信，备注 rc-gantt","routePath":"/react-gantt/zh/","lang":"","toc":[{"text":"📦 安装依赖","id":"-安装依赖","depth":2,"charIndex":-1},{"text":"🔨 快速开始","id":"-快速开始","depth":2,"charIndex":12},{"text":"问题反馈","id":"问题反馈","depth":2,"charIndex":36}],"domain":"","frontmatter":{"title":"rc-gantt","hero":{"title":"rc-gantt","desc":"Gantt组件","actions":[{"text":"快速上手 →","link":"/component"}]},"footer":"Open-source MIT Licensed | Copyright © 2021<br />"},"version":""}]